<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="13" failed="0" total="15" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="73014" started-at="2020-06-02T08:07:29Z" finished-at="2020-06-02T08:08:42Z">
    <groups>
    </groups>
    <test name="Test Register" duration-ms="58361" started-at="2020-06-02T08:07:29Z" finished-at="2020-06-02T08:08:27Z">
      <class name="test.Test_Register">
        <test-method status="PASS" signature="set()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="set" is-config="true" duration-ms="10288" started-at="2020-06-02T15:07:29Z" finished-at="2020-06-02T15:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_invalidEmail()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="register_invalidEmail" duration-ms="16510" started-at="2020-06-02T15:07:39Z" finished-at="2020-06-02T15:07:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_invalidEmail -->
        <test-method status="PASS" signature="done()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="done" is-config="true" duration-ms="1408" started-at="2020-06-02T15:07:56Z" finished-at="2020-06-02T15:07:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="set" is-config="true" duration-ms="4763" started-at="2020-06-02T15:07:57Z" finished-at="2020-06-02T15:08:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_invalidPasswordNotMatch()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="register_invalidPasswordNotMatch" duration-ms="12409" started-at="2020-06-02T15:08:02Z" finished-at="2020-06-02T15:08:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_invalidPasswordNotMatch -->
        <test-method status="PASS" signature="done()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="done" is-config="true" duration-ms="1930" started-at="2020-06-02T15:08:14Z" finished-at="2020-06-02T15:08:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="FAIL" signature="set()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:16Z" finished-at="2020-06-02T15:08:16Z">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[session not created
from chrome not reachable
  (Session info: chrome=83.0.4103.61)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00B89563+2725219]
	Ordinal0 [0x00A88551+1672529]
	Ordinal0 [0x00970202+524802]
	Ordinal0 [0x009699B2+498098]
	Ordinal0 [0x0096A09B+499867]
	Ordinal0 [0x0096AFF5+503797]
	Ordinal0 [0x00966994+485780]
	Ordinal0 [0x00970FF0+528368]
	Ordinal0 [0x0091D6C9+186057]
	Ordinal0 [0x0091CA3D+182845]
	Ordinal0 [0x0091A94B+174411]
	Ordinal0 [0x00902528+75048]
	Ordinal0 [0x009035A0+79264]
	Ordinal0 [0x00903539+79161]
	Ordinal0 [0x00A9D607+1758727]
	GetHandleVerifier [0x00CA6546+1050150]
	GetHandleVerifier [0x00CA6291+1049457]
	GetHandleVerifier [0x00CB10D7+1094071]
	GetHandleVerifier [0x00CA6B46+1051686]
	Ordinal0 [0x00A95B06+1727238]
	Ordinal0 [0x00A9EB7B+1764219]
	Ordinal0 [0x00A9ECE3+1764579]
	Ordinal0 [0x00AB4C05+1854469]
	BaseThreadInitThunk [0x77976359+25]
	RtlGetAppContainerNamedObjectPath [0x77D17B74+228]
	RtlGetAppContainerNamedObjectPath [0x77D17B44+180]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created
from chrome not reachable
  (Session info: chrome=83.0.4103.61)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00B89563+2725219]
	Ordinal0 [0x00A88551+1672529]
	Ordinal0 [0x00970202+524802]
	Ordinal0 [0x009699B2+498098]
	Ordinal0 [0x0096A09B+499867]
	Ordinal0 [0x0096AFF5+503797]
	Ordinal0 [0x00966994+485780]
	Ordinal0 [0x00970FF0+528368]
	Ordinal0 [0x0091D6C9+186057]
	Ordinal0 [0x0091CA3D+182845]
	Ordinal0 [0x0091A94B+174411]
	Ordinal0 [0x00902528+75048]
	Ordinal0 [0x009035A0+79264]
	Ordinal0 [0x00903539+79161]
	Ordinal0 [0x00A9D607+1758727]
	GetHandleVerifier [0x00CA6546+1050150]
	GetHandleVerifier [0x00CA6291+1049457]
	GetHandleVerifier [0x00CB10D7+1094071]
	GetHandleVerifier [0x00CA6B46+1051686]
	Ordinal0 [0x00A95B06+1727238]
	Ordinal0 [0x00A9EB7B+1764219]
	Ordinal0 [0x00A9ECE3+1764579]
	Ordinal0 [0x00AB4C05+1854469]
	BaseThreadInitThunk [0x77976359+25]
	RtlGetAppContainerNamedObjectPath [0x77D17B74+228]
	RtlGetAppContainerNamedObjectPath [0x77D17B44+180]

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)
	at config.Setup.set(Setup.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:27Z" finished-at="2020-06-02T15:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:27Z" finished-at="2020-06-02T15:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="register_invalidPasswordNumChar()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="register_invalidPasswordNumChar" duration-ms="0" started-at="2020-06-02T15:08:27Z" finished-at="2020-06-02T15:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_invalidPasswordNumChar -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:27Z" finished-at="2020-06-02T15:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:27Z" finished-at="2020-06-02T15:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:27Z" finished-at="2020-06-02T15:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="register_validateGender()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="register_validateGender" duration-ms="0" started-at="2020-06-02T15:08:27Z" finished-at="2020-06-02T15:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_validateGender -->
        <test-method status="SKIP" signature="register_maxCharFullname()[pri:0, instance:test.Test_Register@3d8c7aca]" test-instance-name="" name="register_maxCharFullname" duration-ms="0" started-at="2020-06-02T15:08:27Z" finished-at="2020-06-02T15:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_maxCharFullname -->
      </class> <!-- test.Test_Register -->
    </test> <!-- Test Register -->
    <test name="Test Login" duration-ms="14616" started-at="2020-06-02T08:08:27Z" finished-at="2020-06-02T08:08:42Z">
      <class name="test.Test_Login">
        <test-method status="FAIL" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:27Z" finished-at="2020-06-02T15:08:27Z">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[session not created
from chrome not reachable
  (Session info: chrome=83.0.4103.61)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00B89563+2725219]
	Ordinal0 [0x00A88551+1672529]
	Ordinal0 [0x00970202+524802]
	Ordinal0 [0x009699B2+498098]
	Ordinal0 [0x0096A09B+499867]
	Ordinal0 [0x0096AFF5+503797]
	Ordinal0 [0x00966994+485780]
	Ordinal0 [0x00970FF0+528368]
	Ordinal0 [0x0091D6C9+186057]
	Ordinal0 [0x0091CA3D+182845]
	Ordinal0 [0x0091A94B+174411]
	Ordinal0 [0x00902528+75048]
	Ordinal0 [0x009035A0+79264]
	Ordinal0 [0x00903539+79161]
	Ordinal0 [0x00A9D607+1758727]
	GetHandleVerifier [0x00CA6546+1050150]
	GetHandleVerifier [0x00CA6291+1049457]
	GetHandleVerifier [0x00CB10D7+1094071]
	GetHandleVerifier [0x00CA6B46+1051686]
	Ordinal0 [0x00A95B06+1727238]
	Ordinal0 [0x00A9EB7B+1764219]
	Ordinal0 [0x00A9ECE3+1764579]
	Ordinal0 [0x00AB4C05+1854469]
	BaseThreadInitThunk [0x77976359+25]
	RtlGetAppContainerNamedObjectPath [0x77D17B74+228]
	RtlGetAppContainerNamedObjectPath [0x77D17B44+180]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created
from chrome not reachable
  (Session info: chrome=83.0.4103.61)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00B89563+2725219]
	Ordinal0 [0x00A88551+1672529]
	Ordinal0 [0x00970202+524802]
	Ordinal0 [0x009699B2+498098]
	Ordinal0 [0x0096A09B+499867]
	Ordinal0 [0x0096AFF5+503797]
	Ordinal0 [0x00966994+485780]
	Ordinal0 [0x00970FF0+528368]
	Ordinal0 [0x0091D6C9+186057]
	Ordinal0 [0x0091CA3D+182845]
	Ordinal0 [0x0091A94B+174411]
	Ordinal0 [0x00902528+75048]
	Ordinal0 [0x009035A0+79264]
	Ordinal0 [0x00903539+79161]
	Ordinal0 [0x00A9D607+1758727]
	GetHandleVerifier [0x00CA6546+1050150]
	GetHandleVerifier [0x00CA6291+1049457]
	GetHandleVerifier [0x00CB10D7+1094071]
	GetHandleVerifier [0x00CA6B46+1051686]
	Ordinal0 [0x00A95B06+1727238]
	Ordinal0 [0x00A9EB7B+1764219]
	Ordinal0 [0x00A9ECE3+1764579]
	Ordinal0 [0x00AB4C05+1854469]
	BaseThreadInitThunk [0x77976359+25]
	RtlGetAppContainerNamedObjectPath [0x77D17B74+228]
	RtlGetAppContainerNamedObjectPath [0x77D17B44+180]

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)
	at config.Setup.set(Setup.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="login_invalidEmail()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_invalidEmail" duration-ms="1" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_invalidEmail -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_invalidPassword()[pri:1, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_invalidPassword" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_invalidPassword -->
        <test-method status="SKIP" signature="login_invalidPhone()[pri:2, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_invalidPhone" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_invalidPhone -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="login_notRegisteredEmail()[pri:3, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_notRegisteredEmail" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_notRegisteredEmail -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="login_notRegisteredPhone()[pri:4, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_notRegisteredPhone" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_notRegisteredPhone -->
        <test-method status="SKIP" signature="login_success()[pri:5, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_success" duration-ms="1" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_success -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_successByAccount()[pri:5, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_successByAccount" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_successByAccount -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_successByContinueWatching()[pri:5, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_successByContinueWatching" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_successByContinueWatching -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_successByMyList()[pri:5, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_successByMyList" duration-ms="1" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_successByMyList -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="login_successByHistory()[pri:5, instance:test.Test_Login@60addb54]" test-instance-name="" name="login_successByHistory" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_successByHistory -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@60addb54]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-02T15:08:42Z" finished-at="2020-06-02T15:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- test.Test_Login -->
    </test> <!-- Test Login -->
  </suite> <!-- Suite -->
</testng-results>

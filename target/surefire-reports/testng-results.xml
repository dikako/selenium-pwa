<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="25" failed="0" total="25" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="4753" started-at="2020-06-07T06:49:03Z" finished-at="2020-06-07T06:49:07Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="4753" started-at="2020-06-07T06:49:03Z" finished-at="2020-06-07T06:49:07Z">
      <class name="test.Test_ForgetPassword">
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="forgetpassword_invalidEmail()[pri:0, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="forgetpassword_invalidEmail" duration-ms="1" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetpassword_invalidEmail -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="forgetpassword_invalidPhone()[pri:1, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="forgetpassword_invalidPhone" duration-ms="1" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetpassword_invalidPhone -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="forgetpassword_emailNotRegistered()[pri:2, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="forgetpassword_emailNotRegistered" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetpassword_emailNotRegistered -->
        <test-method status="SKIP" signature="forgetpassword_phoneNotRegistered()[pri:3, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="forgetpassword_phoneNotRegistered" duration-ms="1" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetpassword_phoneNotRegistered -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_ForgetPassword@100fc185]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- test.Test_ForgetPassword -->
      <class name="test.Test_Login">
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_invalidEmail()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_invalidEmail" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_invalidEmail -->
        <test-method status="SKIP" signature="login_invalidPassword()[pri:1, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_invalidPassword" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_invalidPassword -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="5" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="login_invalidPhone()[pri:2, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_invalidPhone" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_invalidPhone -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="login_notRegisteredEmail()[pri:3, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_notRegisteredEmail" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_notRegisteredEmail -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_notRegisteredPhone()[pri:4, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_notRegisteredPhone" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_notRegisteredPhone -->
        <test-method status="SKIP" signature="login_success()[pri:5, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_success" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_success -->
        <test-method status="SKIP" signature="login_successByContinueWatching()[pri:5, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_successByContinueWatching" duration-ms="10" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_successByContinueWatching -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_successByAccount()[pri:5, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_successByAccount" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_successByAccount -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_successByHistory()[pri:5, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_successByHistory" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_successByHistory -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="login_successByMyList()[pri:5, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_successByMyList" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_successByMyList -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Login@643b1d11]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_successByQrCode()[pri:5, instance:test.Test_Login@643b1d11]" test-instance-name="" name="login_successByQrCode" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_successByQrCode -->
      </class> <!-- test.Test_Login -->
      <class name="test.Test_Mylist">
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Mylist@3a82f6ef]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="mylist_addByAccountLogin()[pri:0, instance:test.Test_Mylist@3a82f6ef]" test-instance-name="" name="mylist_addByAccountLogin" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mylist_addByAccountLogin -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Mylist@3a82f6ef]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- test.Test_Mylist -->
      <class name="test.Test_Register">
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="register_invalidEmail()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="register_invalidEmail" duration-ms="1" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_invalidEmail -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="register_invalidPasswordNotMatch()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="register_invalidPasswordNotMatch" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_invalidPasswordNotMatch -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="register_invalidPasswordNumChar()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="register_invalidPasswordNumChar" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_invalidPasswordNumChar -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="register_maxCharFullname()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="register_maxCharFullname" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_maxCharFullname -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="register_validateGender()[pri:0, instance:test.Test_Register@6cc4c815]" test-instance-name="" name="register_validateGender" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_validateGender -->
      </class> <!-- test.Test_Register -->
      <class name="test.Test_Chat">
        <test-method status="FAIL" signature="set()[pri:0, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:03Z" finished-at="2020-06-07T13:49:03Z">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '192.168.43.28', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '192.168.43.28', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: driver.version: RemoteWebDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:573)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at config.Setup.set(Setup.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:4444
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)
	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)
	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
	at okhttp3.RealCall.execute(RealCall.java:77)
	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:105)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	... 26 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)
	... 48 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="chat_beforeLoginRCTI()[pri:0, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="chat_beforeLoginRCTI" duration-ms="1" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_beforeLoginRCTI -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="chat_beforeLoginMNCTV()[pri:1, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="chat_beforeLoginMNCTV" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_beforeLoginMNCTV -->
        <test-method status="SKIP" signature="chat_beforeLoginGTV()[pri:2, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="chat_beforeLoginGTV" duration-ms="1" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_beforeLoginGTV -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="set()[pri:0, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="set" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="SKIP" signature="chat_beforeLoginINEWS()[pri:3, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="chat_beforeLoginINEWS" duration-ms="1" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_beforeLoginINEWS -->
        <test-method status="SKIP" signature="done()[pri:0, instance:test.Test_Chat@56f4468b]" test-instance-name="" name="done" is-config="true" duration-ms="0" started-at="2020-06-07T13:49:07Z" finished-at="2020-06-07T13:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- test.Test_Chat -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
